{
  "hash": "058053011eac0b0aa2828d983951e9aa",
  "result": {
    "markdown": "---\ntitle: \"PracticalOne\"\nformat: \n  html: \n    code-fold: true\n---\n\n\n## Question 1\n\n#### Find all rows in \"airquality\" that have missing values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naq_data <- airquality\n\n#Counts how many rows have any column with an NA value\nprint(\"Number of rows with NA values\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Number of rows with NA values\"\n```\n:::\n\n```{.r .cell-code}\nsum(rowSums(is.na(aq_data)) > 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 42\n```\n:::\n\n```{.r .cell-code}\n#Find the location of missing values\nprint(\"Position of the missing values\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Position of the missing values\"\n```\n:::\n\n```{.r .cell-code}\nwhich(is.na(aq_data))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]   5  10  25  26  27  32  33  34  35  36  37  39  42  43  45  46  52  53  54\n[20]  55  56  57  58  59  60  61  65  72  75  83  84 102 103 107 115 119 150 158\n[39] 159 164 180 249 250 251\n```\n:::\n\n```{.r .cell-code}\n# count total missing values \nprint(\"Count of total missing values  \")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Count of total missing values  \"\n```\n:::\n\n```{.r .cell-code}\nsum(is.na(aq_data))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 44\n```\n:::\n:::\n\n\n## Question 2\n\n### Find mean, sd, min, max for each of temperature and ozone level.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Find the mean of Temperature\nprint(\"The mean temperature is:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"The mean temperature is:\"\n```\n:::\n\n```{.r .cell-code}\nmean(aq_data$Temp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 77.88235\n```\n:::\n\n```{.r .cell-code}\n#Find the sd of Temperature\nprint(\"The standard deviation of temperature is:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"The standard deviation of temperature is:\"\n```\n:::\n\n```{.r .cell-code}\nsd(aq_data$Temp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 9.46527\n```\n:::\n\n```{.r .cell-code}\n#Find the min Temperature\nprint(\"The minimum temperature is:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"The minimum temperature is:\"\n```\n:::\n\n```{.r .cell-code}\nmin(aq_data$Temp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 56\n```\n:::\n\n```{.r .cell-code}\n#Find the max Temperature\nprint(\"The maximum temperature is:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"The maximum temperature is:\"\n```\n:::\n\n```{.r .cell-code}\nmax(aq_data$Temp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 97\n```\n:::\n\n```{.r .cell-code}\n#############################################\n\n#Find the mean of ozone level\nprint(\"The mean ozone level is:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"The mean ozone level is:\"\n```\n:::\n\n```{.r .cell-code}\nmean(aq_data$Ozone, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 42.12931\n```\n:::\n\n```{.r .cell-code}\n#Find the sd of ozone level\nprint(\"The standard deviation of ozone level is:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"The standard deviation of ozone level is:\"\n```\n:::\n\n```{.r .cell-code}\nsd(aq_data$Ozone, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 32.98788\n```\n:::\n\n```{.r .cell-code}\n#Find the min ozone level\nprint(\"The minimum ozone level is:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"The minimum ozone level is:\"\n```\n:::\n\n```{.r .cell-code}\nmin(aq_data$Ozone, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\n#Find the max ozone level\nprint(\"The maximum ozone level is:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"The maximum ozone level is:\"\n```\n:::\n\n```{.r .cell-code}\nmax(aq_data$Ozone, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 168\n```\n:::\n:::\n\n\n## Question 3\n\n### Fit a simple linear regression model to the car data, i.e. find the β estimates, using the parameter estimate equation for linear regression, and matrix calculations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncars_data <- cars\n\n# Create the x variable vector for speed\nx <- cbind(1, cars_data$speed)\n\n# Create the y variable vector for distance\ny <- as.matrix(cars_data$dist)\n\n# Calculate the Beta parameter estimate\nbeta_hat <- solve(t(x) %*% x)  %*%  t(x) %*% y\nprint(\"The parameter estimates from the matrix calculation is:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"The parameter estimates from the matrix calculation is:\"\n```\n:::\n\n```{.r .cell-code}\nbeta_hat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           [,1]\n[1,] -17.579095\n[2,]   3.932409\n```\n:::\n:::\n\n\n## Question 4\n\n### Check that you get the same  β estimates as when fitting the linear regression model using lm()\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# linear regression model of the cars dataset \nlm_model <-  lm(dist ~ speed, data = cars)\n\n#Get the Beta estimate\nprint(\"The parameter estimates from the linear regression model is:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"The parameter estimates from the linear regression model is:\"\n```\n:::\n\n```{.r .cell-code}\ncoef(lm_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(Intercept)       speed \n -17.579095    3.932409 \n```\n:::\n:::\n\n\n### Extra:\n\nCreate a function to calculate the beta, standard error and t-value of the linear regression model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstats <- function(x, y) {\n  n <- length(y)\n  X <- cbind(1, x)  # adds the intercept term\n  beta_hat <- solve(t(X) %*% X) %*% (t(X) %*% y)  # calc the beta coefficient from X and y vectors\n  \n  y_hat <- X %*% beta_hat\n  residuals <- y - y_hat\n  sigma_sq <- sum(residuals^2) / (n - 2)  # calculates the variance \n  \n  var_beta <- sigma_sq * solve(t(X) %*% X)  # calculates the variance-covariance matrix\n  std_error <- sqrt(diag(var_beta))  #  calculates the standard error of coefficients\n  \n  t_values <- beta_hat / std_error  # calculate the t-values\n  \n  return(list(beta = beta_hat[2], std_error = std_error[2], t_value = t_values[2]))\n}\n```\n:::\n\n\nApply the stats function to the dependent and independent variables of the cars data set\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstats(cars$speed, cars$dist)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$beta\n[1] 3.932409\n\n$std_error\n        x \n0.4155128 \n\n$t_value\n[1] 9.46399\n```\n:::\n:::\n\n\nCompare the above calculated statistics to the pre-coded statistics for an lm function\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(lm_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = dist ~ speed, data = cars)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-29.069  -9.525  -2.272   9.215  43.201 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -17.5791     6.7584  -2.601   0.0123 *  \nspeed         3.9324     0.4155   9.464 1.49e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 15.38 on 48 degrees of freedom\nMultiple R-squared:  0.6511,\tAdjusted R-squared:  0.6438 \nF-statistic: 89.57 on 1 and 48 DF,  p-value: 1.49e-12\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}